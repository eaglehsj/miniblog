<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">
	
	<description>Spring公共配置</description>
	<!-- 配置中文文字 -->
	<bean id="messageSource"  
   			 class="org.springframework.context.support.ResourceBundleMessageSource">  
    	<property name="basenames">
    		<list>  
                <value>i18n/message</value>  
            </list>    
    	</property>  
    	<property name="defaultEncoding" value="UTF-8" />  
	</bean>  
	<!-- 基于Cookie的本地化解析器 -->
	<bean id="localeResolver"  
    	class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    	<property name="defaultLocale" value="zh"/>
    </bean>  
    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.blog.miniblog">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    
    <!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:mybatis/*Mapper.xml" />
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.blog.miniblog.repository" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
		
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />	
		
	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/prop/db.properties" />

		 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		      <!-- 基本属性 url、user、password -->
		      <property name="url" value="${jdbc.url}" />
		      <property name="username" value="${jdbc.username}" />
		      <property name="password" value="${jdbc.password}" />
		
		      <!-- 配置初始化大小、最小、最大 -->
		      <property name="initialSize" value="${jdbc.initialSize}" />
		      <property name="minIdle" value="${jdbc.minIdle}" /> 
		      <property name="maxActive" value="${jdbc.maxActive}" />
		
		      <!-- 配置获取连接等待超时的时间 -->
		      <property name="maxWait" value="${jdbc.maxWait}" />
		
		      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		      <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		
		      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		      <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		
		      <property name="validationQuery" value="${jdbc.validationQuery}" />
		      <property name="testWhileIdle" value="true" />
		      <property name="testOnBorrow" value="false" />
		      <property name="testOnReturn" value="false" />
		
		      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		      <property name="poolPreparedStatements" value="true" />
		      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		
		      <!-- 配置监控统计拦截的filters -->
		      <property name="filters" value="stat" /> 
		  </bean>
		  
		</beans>  
		
		<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/prop/db.properties" />
		 
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		      <property name="url" value="${jdbc.url}" />
		      <property name="username" value="${jdbc.username}" />
		      <property name="password" value="${jdbc.password}" />
		      <property name="initialSize" value="${jdbc.initialSize}" />
		      <property name="minIdle" value="${jdbc.minIdle}" /> 
		      <property name="maxActive" value="${jdbc.maxActive}" />
		      <property name="maxWait" value="${jdbc.maxWait}" />
		      <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		      <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		      <property name="validationQuery" value="${jdbc.validationQuery}" />
		      <property name="testWhileIdle" value="true" />
		      <property name="testOnBorrow" value="false" />
		      <property name="testOnReturn" value="false" />
		      <property name="poolPreparedStatements" value="true" />
		      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		      <property name="filters" value="stat" /> 
		  </bean>
		
	</beans>
		
		
		  
</beans>		